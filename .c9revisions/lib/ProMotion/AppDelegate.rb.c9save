{"ts":1347924907908,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"module ProMotion\n  class AppDelegateParent\n    attr_accessor :window\n    \n    def application(application, didFinishLaunchingWithOptions:launchOptions)\n      return true if RUBYMOTION_ENV == \"test\"\n\n      Console.log(\" Your AppDelegate (usually in app_delegate.rb) needs an on_load(options) method.\", withColor: Console::RED_COLOR) unless self.respond_to?(:on_load)\n      \n      on_load launchOptions\n\n      open_home_screen if has_home_screen\n\n      get_home_screen.on_opened if has_home_screen && get_home_screen.respond_to?(:on_opened)\n      \n      true\n    end\n\n    def app_delegate\n      UIApplication.sharedApplication.delegate\n    end\n\n    def app_window\n      self.app_delegate.window\n    end\n\n    def load_root_view(new_view)\n      self.window ||= UIWindow.alloc.initWithFrame(UIScreen.mainScreen.bounds)\n      self.window.rootViewController = new_view\n      self.window.makeKeyAndVisible\n    end\n\n    def open_screen(screen)\n      home(screen)\n    end\n\n    def home(screen)\n      screen = screen.new if screen.respond_to? :new\n      @home_screen = screen\n    end\n\n    def fresh_start(new_screen)\n      home(new_screen)\n      open_home_screen\n    end\n\n    def open_home_screen\n      get_home_screen.send(:on_load) if get_home_screen.respond_to?(:on_load)\n      load_root_view get_home_screen.main_controller\n    end\n    \n    def get_home_screen\n      @home_screen\n    end\n\n    def has_home_screen\n      @home_screen.nil? == false\n    end\n  end\nend"]],"start1":0,"start2":0,"length1":0,"length2":1456}]],"length":1456}
{"contributors":[],"silentsave":false,"ts":1347925005943,"patch":[[{"diffs":[[0,"_to?"],[-1," "],[1,"("],[0,":new"],[1,")s"],[0,"\n   "]],"start1":1027,"start2":1027,"length1":13,"length2":15}]],"length":1458,"saved":false}
{"ts":1347925017979,"patch":[[{"diffs":[[0,"o?(:new)"],[-1,"s"],[0,"\n      @"]],"start1":1029,"start2":1029,"length1":17,"length2":16}]],"length":1457,"saved":false}
